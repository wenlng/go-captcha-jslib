import{currentInstance,setCurrentInstance,unsetCurrentInstance}from"./component";import{isFunction}from"../shared";function createHook(t){return(n,e=currentInstance)=>{if(e){const o=()=>{setCurrentInstance(e),n.call(e),unsetCurrentInstance()};(e[t]||(e[t]=[])).push(o)}}}export const onBeforeMount=createHook("_bm");export const onMounted=createHook("_m");export const onBeforeUpdate=createHook("_bu");export const onUpdated=createHook("_u");export const onUnmounted=createHook("_um");export function invokeArray(t){for(let n=0;n<t.length;n++){const e=t[n];isFunction(e)&&e()}}
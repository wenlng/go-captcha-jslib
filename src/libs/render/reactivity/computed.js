import{isFunction}from"../shared";import{ReactiveEffect}from"./effect";import{trackRefValue,triggerRefValue}from"./ref";class ComputedRefImpl{constructor(e,t){this.setter=t,this.effect=new ReactiveEffect((()=>e(this._value)),(()=>{triggerRefValue(this)}))}get value(){return trackRefValue(this),this.effect.dirty&&(this._value=this.effect.run()),this._value}set value(e){this.setter(e)}}export function computed(e){let t,r;return isFunction(e)?(t=e,r=()=>{}):(t=e.get,r=e.set),new ComputedRefImpl(t,r)}